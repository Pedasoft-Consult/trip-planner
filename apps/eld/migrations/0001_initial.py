# Generated by Django 4.2.7 on 2025-09-25 04:18

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("trips", "0001_initial"),
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="ELDLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("log_date", models.DateField()),
                ("starting_odometer", models.PositiveIntegerField(default=0)),
                ("ending_odometer", models.PositiveIntegerField(default=0)),
                (
                    "total_miles_driven",
                    models.DecimalField(decimal_places=1, default=0, max_digits=6),
                ),
                (
                    "total_drive_time",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total driving time in hours",
                        max_digits=4,
                    ),
                ),
                (
                    "total_on_duty_time",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total on-duty time in hours",
                        max_digits=4,
                    ),
                ),
                (
                    "total_off_duty_time",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total off-duty time in hours",
                        max_digits=4,
                    ),
                ),
                (
                    "cycle_hours_used",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(70),
                        ],
                    ),
                ),
                ("is_compliant", models.BooleanField(default=True)),
                ("violation_summary", models.TextField(blank=True)),
                ("is_certified", models.BooleanField(default=False)),
                ("certified_at", models.DateTimeField(blank=True, null=True)),
                (
                    "driver",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eld_logs",
                        to="core.driver",
                    ),
                ),
                (
                    "trip",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eld_logs",
                        to="trips.trip",
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="eld_logs",
                        to="core.vehicle",
                    ),
                ),
            ],
            options={
                "db_table": "eld_log",
                "ordering": ["-log_date"],
                "unique_together": {("driver", "log_date")},
            },
        ),
        migrations.CreateModel(
            name="ELDViolation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "violation_type",
                    models.CharField(
                        choices=[
                            ("CYCLE_EXCEEDED", "70-hour cycle exceeded"),
                            (
                                "DAILY_DRIVE_EXCEEDED",
                                "11-hour daily drive limit exceeded",
                            ),
                            (
                                "DAILY_DUTY_EXCEEDED",
                                "14-hour daily duty limit exceeded",
                            ),
                            ("INSUFFICIENT_REST", "Insufficient off-duty time"),
                            ("MISSING_LOG", "Missing or incomplete log"),
                            ("FORM_MANNER", "Form and manner violation"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "severity",
                    models.CharField(
                        choices=[
                            ("LOW", "Low"),
                            ("MEDIUM", "Medium"),
                            ("HIGH", "High"),
                            ("CRITICAL", "Critical"),
                        ],
                        max_length=10,
                    ),
                ),
                ("description", models.TextField()),
                ("violation_time", models.DateTimeField()),
                ("duration_minutes", models.PositiveIntegerField(default=0)),
                ("is_resolved", models.BooleanField(default=False)),
                ("resolution_notes", models.TextField(blank=True)),
                ("resolved_at", models.DateTimeField(blank=True, null=True)),
                (
                    "eld_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="violations",
                        to="eld.eldlog",
                    ),
                ),
            ],
            options={
                "db_table": "eld_violation",
                "ordering": ["-violation_time"],
            },
        ),
        migrations.CreateModel(
            name="ELDDocument",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "document_type",
                    models.CharField(
                        choices=[
                            ("BILL_OF_LADING", "Bill of Lading"),
                            ("DISPATCH_RECORD", "Dispatch Record"),
                            ("FUEL_RECEIPT", "Fuel Receipt"),
                            ("TOLL_RECEIPT", "Toll Receipt"),
                            ("REPAIR_ORDER", "Repair Order"),
                            ("OTHER", "Other"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField(blank=True)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="eld_documents/"),
                ),
                ("file_name", models.CharField(blank=True, max_length=255)),
                ("file_size", models.PositiveIntegerField(default=0)),
                ("document_date", models.DateField()),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                (
                    "eld_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="documents",
                        to="eld.eldlog",
                    ),
                ),
            ],
            options={
                "db_table": "eld_document",
                "ordering": ["-document_date"],
            },
        ),
        migrations.CreateModel(
            name="ELDAuditLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "action",
                    models.CharField(
                        choices=[
                            ("CREATED", "Log Created"),
                            ("MODIFIED", "Log Modified"),
                            ("CERTIFIED", "Log Certified"),
                            ("UNCERTIFIED", "Log Uncertified"),
                            ("VIOLATION_ADDED", "Violation Added"),
                            ("VIOLATION_RESOLVED", "Violation Resolved"),
                        ],
                        max_length=20,
                    ),
                ),
                ("description", models.TextField()),
                ("user_name", models.CharField(blank=True, max_length=100)),
                ("user_type", models.CharField(blank=True, max_length=50)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500)),
                (
                    "eld_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="audit_entries",
                        to="eld.eldlog",
                    ),
                ),
            ],
            options={
                "db_table": "eld_audit_log",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DutyStatusEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "duty_status",
                    models.CharField(
                        choices=[
                            ("OFF", "Off Duty"),
                            ("SB", "Sleeper Berth"),
                            ("D", "Driving"),
                            ("ON", "On Duty (Not Driving)"),
                        ],
                        max_length=3,
                    ),
                ),
                ("start_time", models.DateTimeField()),
                ("end_time", models.DateTimeField(blank=True, null=True)),
                ("duration_minutes", models.PositiveIntegerField(default=0)),
                ("location_description", models.CharField(blank=True, max_length=200)),
                ("odometer_reading", models.PositiveIntegerField(default=0)),
                ("remarks", models.CharField(blank=True, max_length=200)),
                ("is_automatic", models.BooleanField(default=True)),
                (
                    "eld_log",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="duty_entries",
                        to="eld.eldlog",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="duty_entries",
                        to="core.location",
                    ),
                ),
            ],
            options={
                "db_table": "eld_duty_status_entry",
                "ordering": ["eld_log", "start_time"],
            },
        ),
    ]
